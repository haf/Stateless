<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SandcastleBuilderGUI</name>
    </assembly>
    <members>
        <member name="T:SandcastleBuilder.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.UnsafeNativeMethods">
            <summary>
            This internal class is used for access to some Win32 API functions.
            </summary>
            <remarks>The window placement functions are used so as to support
            restoring the window on multi-monitor systems.</remarks> 
        </member>
        <member name="F:SandcastleBuilder.UnsafeNativeMethods.SW_SHOWNORMAL">
            <summary>Show window in normal position</summary>
        </member>
        <member name="F:SandcastleBuilder.UnsafeNativeMethods.SW_SHOWMINIMIZED">
            <summary>Show window minimized</summary>
        </member>
        <member name="M:SandcastleBuilder.UnsafeNativeMethods.GetWindowPlacement(System.IntPtr,SandcastleBuilder.WINDOWPLACEMENT@)">
            <summary>
            Get the window's placement information
            </summary>
            <param name="hWnd">The window handle for which to get information</param>
            <param name="placement">The placement information structure</param>
            <returns>True on success, false on failure</returns>
        </member>
        <member name="M:SandcastleBuilder.UnsafeNativeMethods.SetWindowPlacement(System.IntPtr,SandcastleBuilder.WINDOWPLACEMENT@)">
            <summary>
            Set the window's placement information
            </summary>
            <param name="hWnd">The window handle for which to set the information</param>
            <param name="placement">The placement information structure</param>
            <returns>True if successful, false on failure</returns>
        </member>
        <member name="M:SandcastleBuilder.UnsafeNativeMethods.VkKeyScan(System.Char)">
            <summary>
            Convert a character value to a virtual-key code and shift state
            for the current keyboard.
            </summary>
            <param name="ch">The character to translate</param>
            <returns>A short containing the virtual-key code in the low order
            byte and the shift state in the high order byte.</returns>
        </member>
        <member name="M:SandcastleBuilder.UnsafeNativeMethods.CharToKeys(System.Char)">
            <summary>
            This is used to convert a <see cref="T:System.Char"/> value to a
            <see cref="T:System.Windows.Forms.Keys"/> value.
            </summary>
            <param name="ch">The character to convert</param>
            <returns>The <see cref="T:System.Windows.Forms.Keys"/> value corresponding to the
            character.  Note that not all keys are represented in the
            <b>Keys</b> enumeration.  Some may return rather odd combinations
            or no actual enumerated value at all.</returns>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.HtmlEncode">
            <summary>
            This will HTML encode the currently selected block of text.
            </summary>
            <remarks>If no text is selected, nothing will happen.</remarks>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.HtmlEncode.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the HTML Encode action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.InsertClosingElement">
            <summary>
            This is used to insert a closing element when Tab is hit and the cursor
            is within an opening tag.
            </summary>
            <remarks>This is a really simple form of auto-completion.  This may be
            replaced in a later release with real auto-completion support that
            includes a pop-up with available options.</remarks>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.InsertClosingElement.#ctor(ICSharpCode.TextEditor.Actions.IEditAction)">
            <summary>
            Constructor
            </summary>
            <param name="oldAction">The old action to call if this action
            doesn't do anything.</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.InsertClosingElement.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the Inser Closing Element action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.InsertElement">
            <summary>
            Insert an element of the given type optionally wrapping any selected
            text in which the cursor is located.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.InsertElement.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="element">The element name to insert</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.InsertElement.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the Insert Element action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.InsertMatchingCharacter">
            <summary>
            Insert a matching character when the first of the pair is entered
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.InsertMatchingCharacter.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="match">The character(s) to insert</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.InsertMatchingCharacter.Execute(ICSharpCode.TextEditor.TextArea)">
            <summary>
            Execute the Insert Matching action
            </summary>
            <param name="textArea">The text area in which to perform the
            action</param>
        </member>
        <member name="T:SandcastleBuilder.ViewLogDlg">
            <summary>
            This form is used to view the output from the last build so that it
            is easier to review.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ViewLogDlg.TransformLogFile(System.String)">
            <summary>
            This can be used to transform the log file for viewing.
            </summary>
            <param name="logFile">The log file to transform</param>
            <returns>The HTML representing the transformed log file</returns>
        </member>
        <member name="M:SandcastleBuilder.ViewLogDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="logFile">The log file to view</param>
        </member>
        <member name="M:SandcastleBuilder.ViewLogDlg.btnPrint_Click(System.Object,System.EventArgs)">
            <summary>
            Print the information in the viewer
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.ViewLogDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ViewLogDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.ViewLogDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.ProjectSummaryDlg">
            <summary>
            This form is used to edit the project summary comments.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ProjectSummaryDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ProjectSummaryDlg.txtSummary_Enter(System.Object,System.EventArgs)">
            <summary>
            Clear the selection to prevent accidental deletion of the text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.ProjectSummaryDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ProjectSummaryDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.ProjectSummaryDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.ProjectSummaryDlg.Summary">
            <summary>
            Get or set the project summary comments
            </summary>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.TopicEditorWindow">
            <summary>
            This form is used to edit a conceptual topic file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.#ctor(System.String,SandcastleBuilder.Utils.ConceptualContent.Topic)">
            <summary>
            Constructor
            </summary>
            <param name="filename">The filename to load</param>
            <param name="relatedTopic">The topic related to the file or null
            if there isn't one.</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.InsertTopicLink(System.String,SandcastleBuilder.Utils.ConceptualContent.Topic)">
            <summary>
            Insert a link to a topic
            </summary>
            <param name="extension">The extension of the file in which the
            link is being inserted.</param>
            <param name="topic">The topic for which to create a link</param>
            <remarks>If dropped inside some selected text, the link will
            wrap the selected text.</remarks>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.Save">
            <summary>
            Save the topic
            </summary>
            <overloads>There are two overloads for this method</overloads>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.Save(System.String)">
            <summary>
            Save the topic to a new filename
            </summary>
            <param name="filename">The new filename</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.editor_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Mark the file as dirty when the text changes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            This is overriden to prompt to save changes if necessary
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.editor_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This displays the drop cursor when the mouse drags into
            the editor.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.editor_DragOver(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This validates the drop target during the drag operation
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.editor_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This handles the drop operation for the editor
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.MediaLinkItem_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a media link into the document
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.insertElement_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a basic element such as legacyBold, legacyItalic, etc.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event element</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.insertList_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a list element
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.tsbTable_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a table element
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.tsbLocalLink_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a link to an in-page address attribute value
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.tsbExternalLink_Click(System.Object,System.EventArgs)">
            <summary>
            Insert an external link
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.miAlert_Click(System.Object,System.EventArgs)">
            <summary>
            Insert an alert
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.miCode_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a code element
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.miSection_Click(System.Object,System.EventArgs)">
            <summary>
            Insert a section
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.tsbHtmlEncode_Click(System.Object,System.EventArgs)">
            <summary>
            HTML encode any currently selected text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.tsbCutText_Click(System.Object,System.EventArgs)">
            <summary>
            Cut text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.tsbCopyText_Click(System.Object,System.EventArgs)">
            <summary>
            Cut text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.tsbPasteText_Click(System.Object,System.EventArgs)">
            <summary>
            Paste text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.tsbUndo_Click(System.Object,System.EventArgs)">
            <summary>
            Undo editor change
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.tsbRedo_Click(System.Object,System.EventArgs)">
            <summary>
            Redo editor change
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.ConceptualContent.TopicEditorWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.TopicEditorWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.ConceptualContent.TopicEditorWindow.Topic">
            <summary>
            This returns the topic associated with the file if any.
            </summary>
            <remarks>This is used for previewing the file.</remarks>
        </member>
        <member name="P:SandcastleBuilder.ConceptualContent.TopicEditorWindow.CanClose">
            <summary>
            This read-only property is used to determine whether or not the
            topic editor can be closed.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.ConceptualContentWindow">
            <summary>
            This form is used to edit the conceptual content items
            </summary>
        </member>
        <member name="F:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.#ctor(SandcastleBuilder.Utils.ConceptualContent.ContentType,SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm)">
            <summary>
            Constructor
            </summary>
            <param name="editType">The content type to edit when opened</param>
            <param name="parent">The parent form</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.SelectContentForEditing(SandcastleBuilder.Utils.ConceptualContent.ContentType)">
            <summary>
            Select the specified content type for editing
            </summary>
            <param name="contentType">The content type to edit</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.LoadImages">
            <summary>
            Load the tree view with images and set the form up to edit them
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.LoadTokens">
            <summary>
            Load the tree view with tokens and set the form up to edit them
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.LoadTopics(SandcastleBuilder.Utils.ConceptualContent.Topic)">
            <summary>
            Load the tree view with the topics and set the form up to edit them
            </summary>
            <param name="selectedEntry">If not null, the node containing the
            specified entry is set as the selected node.  If null, the first
            node is selected.</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.LoadCodeSnippets">
            <summary>
            Load the IDs from the code snippets file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.AddChildren(SandcastleBuilder.Utils.ConceptualContent.TopicCollection,System.Windows.Forms.TreeNode)">
            <summary>
            Add child nodes to the tree view recursively
            </summary>
            <param name="children">The collection of entries to add</param>
            <param name="root">The root to which they are added</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.UpdateControlStatus">
            <summary>
            This is used to update the state of the form controls
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.miContentMenu_DropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Adjust the Content menu options based on the current content
            selection.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.cboContentType_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Load the selected content type into the controls
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Update the node text when a property changes if it affects the
            node text.
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.txtFindId_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Find an image or topic by ID when Enter is hit in the text box
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbAddImage_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Add one or more new image files
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.miImportMediaFile_Click(System.Object,System.EventArgs)">
            <summary>
            Import image information from an existing MAML media content file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbDeleteImage_Click(System.Object,System.EventArgs)">
            <summary>
            Delete the selected image
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbAddToken_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Add a new token
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbDeleteToken_Click(System.Object,System.EventArgs)">
            <summary>
            Delete the selected image
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbDefaultTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Set the selected node as the default topic
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbSplitTOC_Click(System.Object,System.EventArgs)">
            <summary>
            Set the selected node as the split TOC location
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbMoveItem_Click(System.Object,System.EventArgs)">
            <summary>
            Move the selected node up or down within the group
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The sender of the event</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.AddExistingTopicFile_Click(System.Object,System.EventArgs)">
            <summary>
            Add an existing topic file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.templateFile_OnClick(System.Object,System.EventArgs)">
            <summary>
            Add a new template based on the selected template file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.AddTopicFile(System.String,System.Guid,System.Boolean)">
            <summary>
            Add a new topic file
            </summary>
            <param name="filename">The filename of the topic to add</param>
            <param name="id">The GUID to use as the ID or <see cref="F:System.Guid.Empty"/>
            to use the ID in the file if there is one.</param>
            <param name="addAsChild">True to add as a child of the selected
            node or false to add it as a sibling.</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbAddTopic_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Add an empty container node that is not associated with any topic
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.AddAllTopicsInFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Add all topic files found in the selected folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbDeleteTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a content item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbCutCopy_Click(System.Object,System.EventArgs)">
            <summary>
            Cut or copy the selected node to the clipboard
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbPaste_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Paste the node from the clipboard.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbEditTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Edit the selected topic file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.miSortTopics_Click(System.Object,System.EventArgs)">
            <summary>
            Sort the topics by display title
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tsbEditSnippets_Click(System.Object,System.EventArgs)">
            <summary>
            Edit the code snippets file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.txtFindId_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This displays the drop cursor when the mouse drags into
            the Find textbox.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.txtFindId_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This handles the drop operation for the Find textbox
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tvContent_ItemDrag(System.Object,System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This initiates drag and drop for the tree view nodes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tvContent_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This displays the drop cursor when the mouse drags into
            the tree view.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tvContent_DragOver(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This validates the drop target during the drag operation
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tvContent_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            This handles the drop operation for the tree view
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tvContent_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Update the state of the controls based on the current selection
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tvContent_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This is used to select the clicked node and display the context
            menu when a right click occurs.  This ensures that the correct
            node is affected by the selected operation.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tvContent_NodeMouseDoubleClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>
            Edit the node if it is double-clicked
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.tvContent_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle shortcut keys in the tree view
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.ConceptualContentWindow.SnippetWrapper">
            <summary>
            A simple wrapper object for the code snippets file that can be
            assigned to the property grid.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.SelectConfigDlg">
            <summary>
            This form is used to select the Visual Studio configuration from which
            to load the assembly and XML comment file information for a new help
            file builder project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.SelectConfigDlg.#ctor(System.Collections.Generic.List{SandcastleBuilder.ProjectConfigItem})">
            <summary>
            Constructor
            </summary>
            <param name="projectConfigs">The list of project configurations
            from which to choose.</param>
        </member>
        <member name="F:SandcastleBuilder.SelectConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.SelectConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.SelectConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.SelectConfigDlg.ConfigurationName">
            <summary>
            This returns the name of the selected configuration
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Constants">
            <summary>
            This class holds a set of constants that define various application
            values such as the application name.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Constants.AppName">
            <summary>The application name</summary>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.CodeEntityWindow">
            <summary>
            This form is used to look up code entity references
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.CodeEntityWindow.#ctor(SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm)">
            <summary>
            Constructor
            </summary>
            <param name="parent">The parent form</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.CodeEntityWindow.IndexComments">
            <summary>
            This is the thread method that indexes the comments files
            </summary>
            <remarks>Rather than a partial build, we'll just index the
            comments files.</remarks>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.CodeEntityWindow.Completed(SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache)">
            <summary>
            This is called if indexing completes successfully
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.CodeEntityWindow.Failed(System.String)">
            <summary>
            This is called if indexing fails
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.CodeEntityWindow.CodeEntityWindow_Load(System.Object,System.EventArgs)">
            <summary>
            This starts the indexing thread when first loaded
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.CodeEntityWindow.CodeEntityWindow_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This kills the build thread if it is still running when closed
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.CodeEntityWindow.txtFindName_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Find all code entities matching the entered text when Enter is hit
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.CodeEntityWindow.tvEntities_ItemDrag(System.Object,System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            Allow an item to be dragged and dropped onto a topic window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.ConceptualContent.CodeEntityWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.CodeEntityWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.CodeEntityWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.UserPreferencesDlg">
            <summary>
            This form is used to allow the user to modify help file builder
            preferences unrelated to projects.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.UserPreferencesDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.UserPreferencesDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.UserPreferencesDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.UserPreferencesDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.UserPreferencesDlg.btnSelectViewer_Click(System.Object,System.EventArgs)">
            <summary>
            Select the HTML Help 2.x viewer application
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.UserPreferencesDlg.UserPreferencesDlg_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Validate the information and save the results if necessary when
            closing.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.UserPreferencesDlg.btnAddFile_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new content editor definition
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.UserPreferencesDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a content editor item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.UserPreferencesDlg.lbContentEditors_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the property grid with the selected item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.UserPreferencesDlg.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Refresh the list box item when a property changes
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.PreviewTopicWindow">
            <summary>
            This form is used to preview a topic
            </summary>
        </member>
        <member name="F:SandcastleBuilder.ConceptualContent.PreviewTopicWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.PreviewTopicWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.PreviewTopicWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.PreviewTopicWindow.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.PreviewTopicWindow.PreviewTopic(SandcastleBuilder.Utils.ConceptualContent.Topic)">
            <summary>
            Build the conceptual content and preview the specified topic
            </summary>
            <param name="preview">The topic to preview</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.PreviewTopicWindow.BuildConceptualTopics">
            <summary>
            This kicks off the build process in a background thread
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.PreviewTopicWindow.buildProcess_BuildStepChanged(System.Object,SandcastleBuilder.Utils.BuildProgressEventArgs)">
            <summary>
            This is called by the build process thread to update the main
            window with the current build step.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.PreviewTopicWindow.PreviewTopicWindow_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Shut down the build process thread and clean up on exit
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.PreviewTopicWindow.timer_Tick(System.Object,System.EventArgs)">
            <summary>
            When the build finishes, load the topic if it was built
            successfully or view the log if the build failed.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>We have to wait for the thread to finish before we can
            view the log file so we use a timer event to wait for it.</remarks>
        </member>
        <member name="P:SandcastleBuilder.ConceptualContent.PreviewTopicWindow.CanClose">
            <summary>
            This read-only property is used to determine whether or not the
            preview window can be closed.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.MainForm">
            <summary>
            This is the main form for the application
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MainForm.ImportFromNDoc(System.String)">
            <summary>
            This is called to import settings from an NDoc project into
            a new Sandcastle Help File Builder project.
            </summary>
            <param name="ndocProject">The NDoc project file from which to
            import the settings.</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.ImportFromVisualStudio(System.String)">
            <summary>
            This is called to import settings from a Visual Studio solution or
            project file into a new Sandcastle Help File Builder project.
            </summary>
            <param name="visualStudioFile">The Visual Studio solution or
            project file from which to import the assemblies.</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.ImportFromVSProject(System.String,System.Collections.Generic.List{SandcastleBuilder.ProjectConfigItem})">
            <summary>
            Import the assemblies information for the specified Visual
            Studio project file.
            </summary>
            <param name="projectFile">The project file from which to
            load the assembly information.</param>
            <param name="projectConfigs">The project list</param>
        </member>
        <member name="F:SandcastleBuilder.MainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MainForm.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="projectToLoad">A default project file to load.  If
            not specified, the most recently used project is loaded if there
            is one.</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.UpdateFilenameInfo">
            <summary>
            This is used to update the filename information in the title bar
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MainForm.AskToSaveProject">
            <summary>
            This is called to ask the user if they want to save their project
            </summary>
            <returns>Returns true if saved successfully or no save is
            wanted.  Returns false on error or if cancelled.</returns>
        </member>
        <member name="M:SandcastleBuilder.MainForm.SaveProject">
            <summary>
            Save the project file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MainForm.SetUIEnabledState(System.Boolean)">
            <summary>
            This is used to enable or disable the UI elements for the
            build process
            </summary>
            <param name="enabled">True to enable the UI, false to disable
            it</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.UpdateMruList(System.String)">
            <summary>
            Update the MRU list with the specified project filename by
            adding it to the list or making it the most recently used.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MainForm.KillWebServer">
            <summary>
             Kill the web server if it is running
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MainForm.ConceptualContentEditor_ShowContentEditor(System.Object,SandcastleBuilder.Utils.ConceptualContent.Design.ContentEditorEventArgs)">
            <summary>
            This is used to show the conceptual content editor
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.contentEditor_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            When the content editor is closed, save its position and set the
            reference to null.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.project_Modified(System.Object,System.EventArgs)">
            <summary>
            This updates the state of the form when the project is modified.
            It also updates the Sandcastle path in the component configuration
            form.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.buildProcess_BuildStepChanged(System.Object,SandcastleBuilder.Utils.BuildProgressEventArgs)">
            <summary>
            This is called by the build process thread to update the main
            window with the current build step.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.buildProcess_BuildProgress(System.Object,SandcastleBuilder.Utils.BuildProgressEventArgs)">
            <summary>
            This is called by the build process thread to update the main
            window with information about its progress.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.MainForm_Load(System.Object,System.EventArgs)">
            <summary>
            Load the last used project on startup
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.MainForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Save changes on exit if necessary
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miExit_Click(System.Object,System.EventArgs)">
            <summary>
            Exit the application
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miAbout_Click(System.Object,System.EventArgs)">
            <summary>
            Show information about the application and contact info
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miNewProject_Click(System.Object,System.EventArgs)">
            <summary>
            Start a new help project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miOpenProject_Click(System.Object,System.EventArgs)">
            <summary>
            Open an existing help project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miSaveProject_Click(System.Object,System.EventArgs)">
            <summary>
            Save all changes to the current help project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miSaveProjectAs_Click(System.Object,System.EventArgs)">
            <summary>
            Save all changes to the current help project under a new name
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miBuildProject_Click(System.Object,System.EventArgs)">
            <summary>
            Build the help file using the current project settings
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miCancelBuild_Click(System.Object,System.EventArgs)">
            <summary>
            Cancel the current build process
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.btnAddAssembly_Click(System.Object,System.EventArgs)">
            <summary>
            Add one or more documentation assemblies
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>This will assume that the matching file (assembly or
            comments file) has the same name as the selected file.  If a
            match is not found, the missing file's name is omitted and the
            <b>Edit</b> option can be used to fix it.</remarks>
        </member>
        <member name="M:SandcastleBuilder.MainForm.btnEditAssembly_Click(System.Object,System.EventArgs)">
            <summary>
            Edit the information for the selected documentation assembly
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.btnRemoveAssembly_Click(System.Object,System.EventArgs)">
            <summary>
            Remove the selected documentation assembly from the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Set the project state to dirty when a property changes.  It also
            updates the Sandcastle path in the component configuration form.
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miViewLog_Click(System.Object,System.EventArgs)">
            <summary>
            View the output from the last build in a window so that it's
            easier to review.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miRecentProjects_DropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Build the MRU list when the Recent Projects menu opens
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miProject_Click(System.Object,System.EventArgs)">
            <summary>
            This is used to load a project from the MRU List
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miNewFromNDoc_Click(System.Object,System.EventArgs)">
            <summary>
            Create a new Sandcastle Help File Builder Project from an NDoc
            project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miNewFromVS_Click(System.Object,System.EventArgs)">
            <summary>
            Create a new project from a Visual Studio solution or project
            file.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.btnNSSummaries_Click(System.Object,System.EventArgs)">
            <summary>
            Edit the namespace summaries and indicate which ones should appear
            in the help file.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.btnProjectSummary_Click(System.Object,System.EventArgs)">
            <summary>
            Add project summary notes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>These comments will appear on the root namespaces
            page if entered.</remarks>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miHelp_Click(System.Object,System.EventArgs)">
            <summary>
            View the help file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miClearOutput_Click(System.Object,System.EventArgs)">
            <summary>
            Clear the last build information from the output window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miCleanOutput_Click(System.Object,System.EventArgs)">
            <summary>
            Clean the output and working folders by deleting all files from
            them.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miUserPreferences_Click(System.Object,System.EventArgs)">
            <summary>
            Modify user preferences that are unrelated to the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event argumenst</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.ctxViewHelpMenu_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Enable or disable the viewing options based on the current
            project's help file format setting
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event argumenst</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miViewHelpFile_Click(System.Object,System.EventArgs)">
            <summary>
            View the help file produced by the last build.  Pick the first
            available format.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miViewBuiltHelpFile_Click(System.Object,System.EventArgs)">
            <summary>
            View the last build HTML Help 1.x file, 2.x file, or website
            Index.html page.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miViewAspNetWebsite_Click(System.Object,System.EventArgs)">
            <summary>
            Launch the ASP.NET Development Web Server to view the website
            output (Index.aspx).
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.miOpenHelpAfterBuild_Click(System.Object,System.EventArgs)">
            <summary>
            Toggle the "Open After Build" option
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.lbAssemblies_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Handle drag and drop from Windows Explorer.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MainForm.lbAssemblies_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Add files dragged and dropped from Windows Explorer
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:SandcastleBuilder.SelectAssemblyDlg">
            <summary>
            This form is used to select assemblies for use in building the
            help file.
            </summary>
            <remarks>If <see cref="P:SandcastleBuilder.SelectAssemblyDlg.AssemblyInfo"/> is not set, the form assumes
            a new assembly is being added.  If set, it assumes the specified
            assembly information is being edited.</remarks>
        </member>
        <member name="M:SandcastleBuilder.SelectAssemblyDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.SelectAssemblyDlg.SelectAssemblyDlg_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            This is used to validate that an assembly and an XML file have
            been selected before allowing OK to close the form.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event argument</param>
        </member>
        <member name="F:SandcastleBuilder.SelectAssemblyDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.SelectAssemblyDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.SelectAssemblyDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.SelectAssemblyDlg.AssemblyInfo">
            <summary>
            Get or set the document assembly information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.StartUp">
            <summary>
            This class contains the main entry point and other start up code.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.StartUp.#ctor">
            <summary>
            This class cannot be instantiated
            </summary>
        </member>
        <member name="M:SandcastleBuilder.StartUp.Main(System.String[])">
            <summary>
            The main entry point for the application.
            </summary>
            <param name="args">Command line arguments</param>
        </member>
        <member name="T:SandcastleBuilder.NamespacesDlg">
            <summary>
            This form is used to edit namespace summaries and to indicate which
            namespaces should appear in the help file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.#ctor(SandcastleBuilder.Utils.SandcastleProject)">
            <summary>
            Constructor
            </summary>
            <param name="editProject">The project file in which to edit the
            namespace summaries</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.buildProcess_BuildStepChanged(System.Object,SandcastleBuilder.Utils.BuildProgressEventArgs)">
            <summary>
            This is called by the build process thread to update the main
            window with the current build step.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.buildProcess_BuildProgress(System.Object,SandcastleBuilder.Utils.BuildProgressEventArgs)">
            <summary>
            This is called by the build process thread to update the main
            window with information about its progress.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.LoadNamespaces(System.String)">
            <summary>
            Load the namespace information from the reflection information
            </summary>
            <param name="reflectionFile">The reflection information filename</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.NamespacesDlg_Load(System.Object,System.EventArgs)">
            <summary>
            Do a partial build on load to gather new namespace information that
            isn't currently in the project's namespace list.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.NamespacesDlg_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Shut down the build process thread and clean up on exit
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.btnClose_Click(System.Object,System.EventArgs)">
            <summary>
            Store the changes and close the dialog box
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.btnHelp_Click(System.Object,System.EventArgs)">
            <summary>
            View help for this form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.lbNamespaces_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            When the item changes, show its summary in the text box and set
            the Appears In list box data source.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.lbNamespaces_ItemCheck(System.Object,System.Windows.Forms.ItemCheckEventArgs)">
            <summary>
            Mark the summary item as documented or not when the check state
            changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.txtSummary_Enter(System.Object,System.EventArgs)">
            <summary>
            Clear the selection to prevent accidental deletion of the text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.txtSummary_Leave(System.Object,System.EventArgs)">
            <summary>
            Store changes to the summary when the textbox loses focus
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete an old namespace entry that is no longer needed.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.btnApplyFilter_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the namespace filter to the namespace list
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.NamespacesDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.NamespacesDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.ContentEditorControl">
            <summary>
            This is a derived ICSharpCode text editor control that is used to
            edit the conceptual content.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ContentEditorControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ContentEditorControl.InsertString(ICSharpCode.TextEditor.TextArea,System.String)">
            <summary>
            Insert a string of text into the specified text area at the current
            cursor location.
            </summary>
            <param name="textArea">The text area to use</param>
            <param name="text">The text to insert</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ContentEditorControl.Execute(ICSharpCode.TextEditor.Actions.IEditAction)">
            <summary>
            Execute a specified action in the editor
            </summary>
            <param name="action">The action to execute</param>
        </member>
        <member name="T:SandcastleBuilder.AboutDlg">
            <summary>
            This form is used to display application version information.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.AboutDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.AboutDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.AboutDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.AboutDlg.AboutDlg_Load(System.Object,System.EventArgs)">
            <summary>
            Load the controls on the forms with data
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.AboutDlg.btnSysInfo_Click(System.Object,System.EventArgs)">
            <summary>
            View system information using <b>MSInfo32.exe</b>
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.AboutDlg.Link_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Open the target of the clicked link
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:SandcastleBuilder.WINDOWPLACEMENT">
            <summary>
            This structure is used to get and set the main form's position
            </summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.length">
            <summary>The length of the structure</summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.flags">
            <summary>Window position control flags</summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.showCmd">
            <summary>The current show state of the window</summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.ptMinPosition_x">
            <summary>Window upper left when minimized</summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.ptMinPosition_y">
            <summary>Window upper left when minimized</summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.ptMaxPosition_x">
            <summary>Window upper left when maximized</summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.ptMaxPosition_y">
            <summary>Window upper left when maximized</summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.rcNormalPosition_left">
            <summary>Window coordinates when in the restored position</summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.rcNormalPosition_top">
            <summary>Window coordinates when in the restored position</summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.rcNormalPosition_right">
            <summary>Window coordinates when in the restored position</summary>
        </member>
        <member name="F:SandcastleBuilder.WINDOWPLACEMENT.rcNormalPosition_bottom">
            <summary>Window coordinates when in the restored position</summary>
        </member>
        <member name="T:SandcastleBuilder.ProjectConfigItem">
            <summary>
            This represents a Visual Studio project configuration
            </summary>
            <remarks>This is used to select the documentation assemblies when
            creating a new project from a Visual Studio solution or project
            file.</remarks>
        </member>
        <member name="M:SandcastleBuilder.ProjectConfigItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="configuration">The configuration name</param>
            <param name="assembly">The assembly filename</param>
            <param name="comments">The comments filename</param>
        </member>
        <member name="P:SandcastleBuilder.ProjectConfigItem.ConfigurationName">
            <summary>
            This is used to get the configuration name
            </summary>
        </member>
        <member name="P:SandcastleBuilder.ProjectConfigItem.AssemblyFile">
            <summary>
            This is used to get the assembly filename
            </summary>
        </member>
        <member name="P:SandcastleBuilder.ProjectConfigItem.XmlCommentsFile">
            <summary>
            This is used to get the XML comments filename
            </summary>
        </member>
        <member name="T:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm">
            <summary>
            This form is used to edit the conceptual content items
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.#ctor(System.Windows.Forms.Form,SandcastleBuilder.Utils.ConceptualContent.ContentType)">
            <summary>
            Constructor
            </summary>
            <param name="main">A reference to the main form</param>
            <param name="editType">The content type to edit when opened</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.SelectContentForEditing(SandcastleBuilder.Utils.ConceptualContent.ContentType)">
            <summary>
            Select the specified content type for editing
            </summary>
            <param name="contentType">The content type to edit</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.EditFile(System.String,SandcastleBuilder.Utils.ConceptualContent.Topic)">
            <summary>
            This is used to load a file into an editor window
            </summary>
            <param name="filename">The name of the file to edit</param>
            <param name="topic">If it is a topic, this will be a reference to
            the topic entry.  If not, it will be null.</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.SaveTopics">
            <summary>
            Save all topics
            </summary>
            <returns>Return true if any one cancels</returns>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.DeserializeState(System.String)">
            <summary>
            Deserialize the state of a content pane.
            </summary>
            <param name="persistString">The name of the item being deserialized</param>
            <returns>The dock content if deserialized or null if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.ConceptualContentEditorForm_Load(System.Object,System.EventArgs)">
            <summary>
            Restore the window state and location information on load
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.ConceptualContentEditorForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            When closed update the project's conceptual content settings and
            mark it has dirty if anything was modified.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.dockPanel_ContentAddedRemoved(System.Object,WeifenLuo.WinFormsUI.Docking.DockContentEventArgs)">
            <summary>
            Update the command states when content is added or removed
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miExit_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miViewHelp_Click(System.Object,System.EventArgs)">
            <summary>
            View help for this form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miCodeEntitySearch_Click(System.Object,System.EventArgs)">
            <summary>
            Open or show the code entity search window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miPreviewTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Open or show the preview topic window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miClose_Click(System.Object,System.EventArgs)">
            <summary>
            Close the current editor window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miCloseAll_Click(System.Object,System.EventArgs)">
            <summary>
            Close all open editor windows
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miCloseAllButCurrent_Click(System.Object,System.EventArgs)">
            <summary>
            Close all but the current editor window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miSaveTopic_Click(System.Object,System.EventArgs)">
            <summary>
            Save the current topic
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miSaveAll_Click(System.Object,System.EventArgs)">
            <summary>
            Save all topics and the project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miProjectWindow_Click(System.Object,System.EventArgs)">
            <summary>
            Go back to the SHFB project window
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.miSaveShfbProject_Click(System.Object,System.EventArgs)">
            <summary>
            Save the help file builder project
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.MainMenu">
            <summary>
            This read-only property is used to get the main menu
            </summary>
        </member>
        <member name="P:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.MainToolStrip">
            <summary>
            This read-only property is used to get the main toolstrip
            </summary>
        </member>
        <member name="P:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.StatusBarTextLabel">
            <summary>
            This is used to get a reference to the status bar label used
            for status bar text.
            </summary>
            <remarks>The child forms use this to find the label in which
            to display their status bar text.</remarks>
        </member>
        <member name="P:SandcastleBuilder.ConceptualContent.ConceptualContentEditorForm.CanClose">
            <summary>
            This read-only property is used to determine whether or not the
            content editor can be closed.
            </summary>
        </member>
    </members>
</doc>
